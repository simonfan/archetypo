//     archetypo
//     (c) simonfan
//     archetypo is licensed under the MIT terms.

define(["require","exports","module","subject","lowercase-backbone","q","lodash","./__archetypo/view/index","./__archetypo/router/index"],function(e,t,n){var r=e("subject"),i=e("lowercase-backbone"),s=e("q"),o=e("lodash"),u=e("./__archetypo/view/index"),a=e("./__archetypo/router/index"),f=n.exports=a.extend(function(){a.prototype.initialize.apply(this,arguments),this.constructors={view:{"default":u},model:{},collection:{}},this.instances={view:{},model:{},collection:{}}});f.proto({constructor:function(t,n,r){var i=this.constructors[t],s=i[n]||i["default"];if(arguments.length===3)return r.app=this,i[n]=s.extend(r),i[n];if(arguments.length===2)return o.isObject(n)&&o.each(n,o.bind(this,function(e,n){this.constructor(t,n,e)})),s},instance:function(t,n,r){var i=this.instances[t]=this.instances[t]||{};return arguments.length===3&&(i[n]=r),i[n]},build:function(t){var n=this.constructor("view","default");return n({$el:t,app:this}),this},start:function(t){return i.history.start(t),this}}),f.proto({view:o.partial(f.prototype.instance,"view"),model:o.partial(f.prototype.instance,"model"),collection:o.partial(f.prototype.instance,"collection")})});